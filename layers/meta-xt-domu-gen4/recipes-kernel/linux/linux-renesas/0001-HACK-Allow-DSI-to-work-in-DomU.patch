From 15f3e7574ff33aa2985c2de933229f509e5893f6 Mon Sep 17 00:00:00 2001
Message-Id: <15f3e7574ff33aa2985c2de933229f509e5893f6.1727704104.git.mykyta_poturai@epam.com>
From: Mykyta Poturai <mykyta_poturai@epam.com>
Date: Mon, 30 Sep 2024 16:30:33 +0300
Subject: [PATCH 1/3] HACK: Allow DSI to work in DomU

DomU doesn't have the access to clock and reset controls so all
necessary clocks and resets are controlled by DomD. Skip initializing
clocks and resets to allow the driver to probe correctly.

Signed-off-by: Mykyta Poturai <mykyta_poturai@epam.com>
---
 drivers/gpu/drm/rcar-du/rcar_mipi_dsi.c | 32 ++++++++++++-------------
 1 file changed, 16 insertions(+), 16 deletions(-)

diff --git a/drivers/gpu/drm/rcar-du/rcar_mipi_dsi.c b/drivers/gpu/drm/rcar-du/rcar_mipi_dsi.c
index 86ad2a4f4391..d1a418e7e711 100644
--- a/drivers/gpu/drm/rcar-du/rcar_mipi_dsi.c
+++ b/drivers/gpu/drm/rcar-du/rcar_mipi_dsi.c
@@ -818,15 +818,15 @@ int rcar_mipi_dsi_clk_enable(struct drm_bridge *bridge)
 	struct rcar_mipi_dsi *mipi_dsi = bridge_to_rcar_mipi_dsi(bridge);
 	int ret;
 
-	reset_control_deassert(mipi_dsi->rstc);
+	// reset_control_deassert(mipi_dsi->rstc);
 
-	ret = clk_prepare_enable(mipi_dsi->clocks.mod);
-	if (ret < 0)
-		return ret;
+	// ret = clk_prepare_enable(mipi_dsi->clocks.mod);
+	// if (ret < 0)
+	// 	return ret;
 
-	ret = clk_prepare_enable(mipi_dsi->clocks.dsi);
-	if (ret < 0)
-		return ret;
+	// ret = clk_prepare_enable(mipi_dsi->clocks.dsi);
+	// if (ret < 0)
+	// 	return ret;
 
 	ret = rcar_mipi_dsi_startup(mipi_dsi);
 	if (ret < 0)
@@ -842,12 +842,12 @@ void rcar_mipi_dsi_clk_disable(struct drm_bridge *bridge)
 
 	rcar_mipi_dsi_shutdown(mipi_dsi);
 
-	/* Disable DSI clock and reset HW */
-	clk_disable_unprepare(mipi_dsi->clocks.dsi);
+	// /* Disable DSI clock and reset HW */
+	// clk_disable_unprepare(mipi_dsi->clocks.dsi);
 
-	clk_disable_unprepare(mipi_dsi->clocks.mod);
+	// clk_disable_unprepare(mipi_dsi->clocks.mod);
 
-	reset_control_assert(mipi_dsi->rstc);
+	// reset_control_assert(mipi_dsi->rstc);
 }
 EXPORT_SYMBOL_GPL(rcar_mipi_dsi_clk_disable);
 
@@ -1043,11 +1043,11 @@ static int rcar_mipi_dsi_probe(struct platform_device *pdev)
 	if (ret < 0)
 		return ret;
 
-	mipi_dsi->rstc = devm_reset_control_get(&pdev->dev, NULL);
-	if (IS_ERR(mipi_dsi->rstc)) {
-		dev_err(&pdev->dev, "failed to get cpg reset\n");
-		return PTR_ERR(mipi_dsi->rstc);
-	}
+	// mipi_dsi->rstc = devm_reset_control_get(&pdev->dev, NULL);
+	// if (IS_ERR(mipi_dsi->rstc)) {
+	// 	dev_err(&pdev->dev, "failed to get cpg reset\n");
+	// 	return PTR_ERR(mipi_dsi->rstc);
+	// }
 
 	/* Init host device */
 	mipi_dsi->host.dev = dev;
-- 
2.34.1

